name: Create release on new tag

# Controls when the action will run. Triggers the workflow on new tags
on:
  push:
    tags:
      - 'v*.*.*.*'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Create and compress CHM file
      run: |
        # Create and compress CHM file
        
        Write-Host "Get index data"
        $data_index = Get-Content .\static\source\data_index.js -Encoding UTF8 -Raw
        $needle = 'indexData = ['
        $data_index = $data_index.Substring($data_index.IndexOf($needle)+$needle.Length-1).TrimEnd().TrimEnd(';')
        $entries = $data_index | ConvertFrom-Json

        Write-Host "Create HHK file"
        $output = @"
        <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
        <html>
        <body>
        <ul>
        "@
        foreach ($entry in $entries)
        {
        $output += @"
        <li>
          <object type="text/sitemap">
            <param name="Name" value="$($entry[0])">
            <param name="Local" value="$($entry[1])">
          </object>
        </li>
        "@
        }
        $output += @"
        </ul>
        </body>
        </html>
        "@
        Set-Content .\Index.hhk $output

        Write-Host "::group::Create CHM file"
        & "C:\Program Files (x86)\HTML Help Workshop\hhc.exe" "Project.hhp"
        Write-Host "::endgroup::"

        Write-Host "Compress CHM file"
        Compress-Archive -Path *.chm -DestinationPath .\AutoHotkeyHelp_DE -Force
        
        Exit 0

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        body: ""
        draft: false
        prerelease: false
      
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./AutoHotkeyHelp_DE.zip
        asset_name: AutoHotkeyHelp_DE.zip
        asset_content_type: application/zip
