<!DOCTYPE HTML>
<html>
<head>
<title>ControlGetText</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>ControlGetText</h1>

<p>Ermittelt den Text eines Steuerelements.</p>

<pre class="Syntax">ControlGetText, AusgabeVar [, Steuerelement, Fenstertitel, Fenstertext, Titelausnahme, Textausnahme]</pre>
<h3>Parameter</h3>
<dl>

  <dt>AusgabeVar</dt>
  <dd><p>Name der Variable, in der der ermittelte Text gespeichert werden soll.</p></dd>

  <dt>Steuerelement</dt>
  <dd><p>Kann entweder das ClassNN (Klassenname und Instanznummer des Steuerelements) oder der Text des Steuerelements sein, das beides mit Windows Spy ermittelt werden kann. Verwendet man Text, ist das Übereinstimmungsverhalten abhängig von <a href="SetTitleMatchMode.htm">SetTitleMatchMode</a>. Fehlt dieser Parameter oder ist er leer, wird das oberste Steuerelement des Fensters benutzt.</p>
    <p>Um ein Steuerelement via HWND (Windows Handle) anzusteuern, lässt man den <em>Steuerelement</em>-Parameter leer und übergibt <code>ahk_id %SteuerelementHwnd%</code> als <em>Fenstertitel</em>-Parameter (funktioniert auch bei versteckten Steuerelementen, selbst wenn <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> deaktiviert ist). Das HWND eines Steuerelements wird üblicherweise per <a href="ControlGet.htm#Hwnd">ControlGet Hwnd</a>, <a href="MouseGetPos.htm">MouseGetPos</a> oder <a href="DllCall.htm">DllCall</a> abgerufen.</p></dd>

  <dt>Fenstertitel</dt>
  <dd><p>Der Titel oder andere Möglichkeiten zum Identifizieren des Zielfensters. Weitere Informationen finden Sie auf der Seite <a href="../misc/WinTitle.htm">Fenstertitel-Parameter &amp; Zuletzt Gefundenes Fenster</a>.</p></dd>

  <dt>Fenstertext</dt>
  <dd><p>Eine Zeichenkette, die in einem der Textelemente des Zielfensters enthalten ist (eventuell vorhandene Textelemente können mit dem mitgelieferten Windows Spy Tool aufgedeckt werden). Versteckte Textelemente werden auch erkannt, sofern <a href="DetectHiddenText.htm">DetectHiddenText</a> aktiv ist.</p></dd>

  <dt>Titelausnahme</dt>
  <dd><p>Ignoriert Fenster, deren Titel diesen Wert enthalten.</p></dd>

  <dt>Textausnahme</dt>
  <dd><p>Ignoriert Fenster, deren Textelemente diesen Wert enthalten.</p></dd>

</dl>

<h3>ErrorLevel</h3>
<p><span class="ver">[v1.1.04+]</span> Dieser Befehl ist in der Lage, bei Misserfolg eine Ausnahme auszulösen. Für mehr Informationen, siehe <a href="Catch.htm#RuntimeErrors">Laufzeitfehler</a>.</p>
<p><a href="../misc/ErrorLevel.htm">ErrorLevel</a> wird bei Misserfolg auf 1 und bei Erfolg auf 0 gesetzt.</p>
<h3>Bemerkungen</h3>
<p>Hinweis: Mit <a href="ControlGet.htm#List">ControlGet List</a> kann der Text eines ListView-, ListBox- oder ComboBox-Steuerelements abgerufen werden.</p>
<p>Erscheint der ermittelte Text gekürzt (unvollständig), muss <code><a href="VarSetCapacity.htm">VarSetCapacity(AusgabeVar, 55)</a></code> vor ControlGetText verwenden werden [55 sollte durch eine wesentlich größere Zahl als die Länge des Textes ersetzt werden]. Da einige Anwendungen nicht richtig auf die WM_GETTEXTLENGTH-Meldung reagieren, macht AutoHotkey die Ausgabevariable zu klein, wodurch der Text nicht mehr reinpasst.</p>
<p>Die Menge der ermittelten Texte sind auf die Maximalkapazität einer Variable beschränkt (die per <a href="_MaxMem.htm">#MaxMem</a>-Direktive geändert werden kann). Folglich könnte dieser Befehl eine große Menge an RAM erzeugen, wenn das Steuerelement (z. B. ein Editor mit einem geöffneten umfangreichen Dokument) eine große Menge an Text beinhaltet. Allerdings kann der Speicher der Variable geleert werden, indem man ihr nichts zuteilt, z. B. <code>AusgabeVar =</code>.</p>
<p>Meistens enthält der abgerufene Text eines Steuerelements CR- und LF-Zeichen (`r`n), anstatt ein einzelnes LF-Zeichen (`n), um das Ende jeder Zeile zu kennzeichnen.</p>
<p>Es ist nicht notwendig, <code>SetTitleMatchMode Slow</code> zu verwenden, weil ControlGetText den Text immer mithilfe der langsamen Methode ermittelt (da bei dieser Methode die Chance höher ist, dass der Befehl bei den meisten Steuerelementarten funktioniert).</p>
<p>Mit <a href="WinGet.htm#ControlList">WinGet ControlList</a> kann eine Liste mit Steuerelementen von einem Fenster abgerufen werden.</p>
<p>Fenstertitel und -texte unterscheiden zwischen Groß- und Kleinschreibung. Solange <a href="DetectHiddenWindows.htm">DetectHiddenWindows</a> deaktiviert ist, werden versteckte Fenster nicht wahrgenommen.</p>
<h3>Siehe auch</h3>
<p><a href="ControlSetText.htm">ControlSetText</a>, <a href="WinGetText.htm">WinGetText</a>, <a href="Control.htm">Control</a>, <a href="ControlGet.htm">ControlGet</a>, <a href="ControlMove.htm">ControlMove</a>, <a href="ControlFocus.htm">ControlFocus</a>, <a href="ControlClick.htm">ControlClick</a>, <a href="ControlSend.htm">ControlSend</a>, <a href="_MaxMem.htm">#MaxMem</a></p>
<h3>Beispiel</h3>
<pre class="NoIndent">ControlGetText, AusgabeVar, Edit1, Unbenannt -</pre>

</body>
</html>
