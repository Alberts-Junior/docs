<!DOCTYPE HTML>
<html>
<head>
<title>StringSplit / StrSplit()</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script src="../static/ga.js" type="text/javascript"></script>
</head>
<body>

<h1>StringSplit / StrSplit()</h1>

<p>Teilt eine Zeichenkette in mehreren Teilzeichenketten auf, basierend auf die angegebenen Trennzeichen.</p>

<pre class="Syntax">StringSplit, AusgabeArray, EingabeVar [, Trennzeichen, ZuEntfernendeZeichen]
Array := StrSplit(Zeichenkette [, Trennzeichen, ZuEntfernendeZeichen])  <em>; [v1.1.13+]</em></pre>
<h3>Parameter</h3>
<h4>StringSplit</h4>
<dl>

  <dt>AusgabeArray</dt>
  <dd><p>Name des <a href="../misc/Arrays.htm#pseudo">Pseudo-Arrays</a>, in der jede extrahierte Teilzeichenkette von <em>EingabeVar</em> gespeichert werden soll. Wenn zum Beispiel MeinArray angegeben ist, wird der Befehl die Anzahl der erzeugten Teilzeichenketten (0, wenn keine) in MeinArray0 speichern, die erste Teilzeichenkette in MeinArray1, die zweite in MeinArray2 und so weiter.</p>
  <p>Um innerhalb einer <a href="../Functions.htm">Funktion</a> einen Pseudo-Array zu erstellen, das nicht lokal sondern global ist, muss MeinArray0 innerhalb der Funktion als globale Variable <a href="../Functions.htm#Global">deklariert</a> werden, bevor dieser Befehl verwendet wird (Das Gegenteil davon gilt für <a href="../Functions.htm#AssumeGlobal">global-behandelnde</a> Funktionen). Aufgrund des <a href="../Functions.htm#ArrayConfusion">Häufigen Anlasses zu Verwirrung</a> muss jedes Element einzeln deklariert werden. Für weitere Details, siehe <a href="../Functions.htm#PseudoArrays">Funktionen</a>.</p></dd>

  <dt>EingabeVar</dt>
  <dd><p>Name der Variable, deren Inhalt geparst werden soll. Umschließen Sie den Namen nicht mit Prozentzeichen, es sei denn, Sie wollen den <em>Inhalt</em> der Variable als Namen verwenden.</p>
      <p class="note"><strong>Hinweis</strong>: <em>EingabeVar</em> darf keine Variable von <em>AusgabeArray</em> sein.</p></dd>

  <dt>Trennzeichen</dt>
  <dd><p>Fehlt dieser Parameter oder ist er leer, wird jedes Zeichen in <em>EingabeVar</em> als einzelne Teilzeichenkette behandelt.</p>
      <p>Ansonsten kann <em>Trennzeichen</em> ein oder mehrere Zeichen enthalten (Groß-/Kleinschreibung-sensitiv), um zu bestimmen, wo die Abgrenzungen zwischen den Teilzeichenketten in <em>EingabeVar</em> erfolgen sollen. Da die Trennzeichen nicht zu den Teilzeichenketten gehören, werden sie nie in <em>AusgabeArray</em> kopiert. Befindet sich außerdem nichts zwischen einem Paar von Trennzeichen innerhalb von <em>EingabeVar</em>, wird das entsprechende Array-Element leer sein.</p>      
      <p>Zum Beispiel: <code>`,</code> (ein Escapezeichen-versehenes Komma) würde die Zeichenkette jeweils bei einem Komma teilen. Ebenso würde %A_Tab%%A_Space% jedesmal ein neues Array-Element erstellen, wenn ein Leer- oder Tabulatorzeichen in <em>EingabeVar</em> vorkommt.</p>
      <p>Es ist möglich, auch eine Zeichenkette als Trennung zu verwenden. Dazu ist es erforderlich, mithilfe von <a href="StringReplace.htm">StringReplace</a> alle Vorkommen der Zeichenkette mit einem Zeichen zu ersetzen, das im Text niemals als direkt geschriebener Text vorkommen wird. Das folgende Beispiel zeigt, wie die Zeichenkette &lt;br&gt; als Trennung verwendet werden kann:</p>
<pre>StringReplace, NeueHTML, HTMLZeichenkette, &lt;br&gt;, ``, All  <em>; Ersetzt jedes &lt;br&gt; mit einem umgekehrten Häkchen.</em>
StringSplit, MeinArray, NeueHTML, ``  <em>; Teilt die Zeichenkette jeweils bei einem umgekehrten Häkchen.</em></pre></dd>

</dl>
<h4>StrSplit() <span class="ver">[v1.1.13+]</span></h4>
<dl>

  <dt>Array<br>(Rückgabewert)</dt>
  <dd><p>Ein <a href="../Objects.htm#Usage_Simple_Arrays">Array</a> (Objekt) mit Zeichenketten.</p></dd>

  <dt>Zeichenkette</dt>
  <dd><p>Eine Zeichenkette, die aufgeteilt werden soll.</p></dd>

  <dt>Trennzeichen</dt>
  <dd><p>Fehlt dieser Parameter oder ist er leer, wird jedes Zeichen der eingehenden Zeichenkette als einzelne Teilzeichenkette behandelt.</p>
      <p>Ansonsten kann <em>Trennzeichen</em> entweder eine einzelne Zeichenkette oder ein Array mit Zeichenketten sein, um zu bestimmen, wo die Abgrenzungen zwischen den Teilzeichenketten erfolgen sollen. Da die Trennzeichen nicht zu den Teilzeichenketten gehören, sind sie nie im Rückgabewert enthalten. Befindet sich außerdem nichts zwischen einem Paar von Trennzeichen innerhalb der eingehenden Zeichenkette, wird das entsprechende Array-Element leer sein.</p>      
      <p>Zum Beispiel: <code>"`,"</code> würde die Zeichenkette jeweils bei einem Komma teilen. Ebenso würde <code>[A_Tab, A_Space]</code> jedesmal ein neues Array-Element erstellen, wenn ein Leer- oder Tabulatorzeichen in der eingehenden Zeichenkette vorkommt.</p></dd>

</dl>
<h4>Beides</h4>
<dl>

  <dt>ZuEntfernendeZeichen</dt>
  <dd><p>Eine optionale Liste von Zeichen (Unterscheidung zwischen Groß- und Kleinschreibung), die jeweils am Anfang und Ende eines Array-Elements weggelassen werden sollen. Wenn <em>ZuEntfernendeZeichen</em> zum Beispiel <code>%A_Space%%A_Tab%</code> (StringSplit) oder <code>" `t"</code> (StrSplit) ist, werden Leer- oder Tabulatorzeichen jeweils am Anfang und Ende (aber nicht in der Mitte) eines Elements entfernt.</p>
    <p>Falls <em>Trennzeichen</em> leer ist, kennzeichnet <em>ZuEntfernendeZeichen</em>, welche Zeichen im Array weggelassen werden sollen.</p>
    <p>Im Gegensatz zum letzten Parameter anderer Befehle müssen in <em>ZuEntfernendeZeichen</em> bei StringSplit Kommas mit einem Escapezeichen versehen werden (`,).</p></dd>

</dl>

<h3>Bemerkungen</h3>
<p>Falls die Array-Elemente bereits vorhanden sind, wird der StringSplit-Befehl die Werte nur von den ersten N Elementen ändern - N ist dabei die Anzahl der Teilzeichenketten in <em>EingabeVar</em>. Alle bereits vorhandenen Elemente über N bleiben unverändert. Daher sollte man am besten das 0-Element (MeinArray0) verwenden, um festzustellen, wie viele Elemente tatsächlich mit diesem Befehl erstellt worden sind.</p>
<p>Leerraumzeichen wie Leer- und Tabulatorzeichen werden beibehalten, sofern sie selbst keine Trennzeichen sind oder in <em>ZuEntfernendeZeichen</em> vorkommen. Tabulator- und Leerzeichen können durch Aufrufen der <a href="Trim.htm">Trim</a>-Funktion an beiden Enden jeder Variable entfernt werden. Zum Beispiel: <code>MeinArray1 := Trim(MeinArray1)</code>.</p>
<p>Um eine Zeichenkette im CSV-Format (komma-getrennte Werte) zu splitten, nutzt man eine <a href="LoopParse.htm">Parsende Schleife</a>, weil sie nativ mit CSV umgehen kann.</p>
<p>Um die Felder vor dem Splitten anders anzuordnen, nutzt man den <a href="Sort.htm">Sort</a>-Befehl.</p>
<p>Wenn die Teilzeichenketten nicht dauerhaft im Arbeitsspeicher vorhanden sein müssen, sollten Sie in Betracht ziehen, eine <a href="LoopParse.htm">Parsende Schleife</a> zu verwenden. Sie könnten dadurch viel Speicherplatz sparen, vor allem, wenn <em>EingabeVar</em> sehr groß ist. Zum Beispiel:</p>
<pre>Farben = rot,grün,blau
Loop, parse, Farben, `,
    MsgBox Farbnummer %A_Index% ist %A_LoopField%.</pre>
<h3>Siehe auch</h3>
<p><a href="LoopParse.htm">Parsende Schleife</a>, <a href="../misc/Arrays.htm">Arrays</a>, <a href="Sort.htm">Sort</a>, <a href="SplitPath.htm">SplitPath</a>, <a href="IfInString.htm">IfInString</a>, <a href="StringGetPos.htm">StringGetPos</a>, <a href="StringMid.htm">StringMid</a>, <a href="StringTrimLeft.htm">StringTrimLeft</a>, <a href="StringTrimLeft.htm">StringTrimRight</a>, <a href="StringLen.htm">StringLen</a>, <a href="StringLower.htm">StringLower</a>, <a href="StringLower.htm">StringUpper</a>, <a href="StringReplace.htm">StringReplace</a></p>
<h3>Beispiele</h3>
<pre class="NoIndent">TestZeichenkette = Das ist ein Test.
StringSplit, wort_array, TestZeichenkette, %A_Space%, .  <em>; Punkte weglassen.</em>
MsgBox, Das vierte Wort ist %wort_array4%.

Farben = rot,grün,blau
StringSplit, FarbArray, Farben, `,
Loop, %FarbArray0%
{
    diese_Farbe := FarbArray%a_index%
    MsgBox, Farbnummer %a_index% ist %diese_Farbe%.
}</pre>
<pre class="NoIndent">TestZeichenkette := "Das ist ein Test."
wort_array := StrSplit(TestZeichenkette, A_Space, ".")  <em>; Punkte weglassen.</em>
MsgBox % "Das vierte Wort ist " wort_array[4]

Farben := "rot,grün,blau"
FarbArray := StrSplit(Farben, ",")
Loop % FarbArray.MaxIndex()
{
    diese_Farbe := FarbArray[a_index]
    MsgBox, Farbnummer %a_index% ist %diese_Farbe%.
}</pre>

</body>
</html>
